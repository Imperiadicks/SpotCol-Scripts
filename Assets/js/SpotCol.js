(() => {
  const GH_BASE_js = 'https://raw.githubusercontent.com/Imperiadicks/SpotCol-Scripts/main/Assets/js/';
  const GH_BASE_css = 'https://raw.githubusercontent.com/Imperiadicks/SpotCol-Scripts/main/Assets/css/';
  console.log("–ü–†–û–í–ï–†–ö–ê SPOTCOL.JS")
  const scripts = [
    'Library.js',
    'colorize 2.js',
    // 'BetterPlayer.js',
    'Main.js',
    'SpotifyScreen.js'
  ];

  const styles = [
    'SpotCol.css',
    'Colorize 2.css'
  ];

async function loadScript(name) {
  const url = GH_BASE_js + encodeURIComponent(name);
  console.log(`[SpotCol] üì¶ –ó–∞–≥—Ä—É–∂–∞—é ${name} ‚Üí ${url}`);
  try {
    const res = await fetch(url);
    if (!res.ok) throw new Error(`HTTP ${res.status}`);
    const code = await res.text();

    // –í—ã–ø–æ–ª–Ω—è–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ —á–µ—Ä–µ–∑ .call(window)
    const globalEval = Function(code);
    globalEval.call(window);

    console.log(`[SpotCol] ‚úÖ ${name} –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω`);
  } catch (e) {
    console.error(`[SpotCol] ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å ${name}:`, e);
  }
}

  async function loadCss(name) {
    const url = GH_BASE_css + encodeURIComponent(name);
    console.log(`[SpotCol] üé® –ó–∞–≥—Ä—É–∂–∞—é CSS ‚Üí ${url}`);
    try {
      const res = await fetch(url);
      if (!res.ok) throw new Error(`HTTP ${res.status}`);
      const css = await res.text();
      const style = document.createElement('style');
      style.textContent = css;
      document.head.appendChild(style);
      console.log(`[SpotCol] ‚úÖ CSS ${name} –ø–æ–¥–∫–ª—é—á—ë–Ω`);
    } catch (e) {
      console.error(`[SpotCol] ‚ùå CSS –æ—à–∏–±–∫–∞: ${name}`, e);
    }
  }

  (async () => {
    for (const style of styles) await loadCss(style);
    for (const script of scripts) await loadScript(script);
    console.log('[SpotCol] üü¢ –í—Å–µ –º–æ–¥—É–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
  })();
})();
